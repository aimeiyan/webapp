\--------------------------------------/
\王牧天博客学习笔记（http://mutian.info） /
\--------------------------------------/

1、CSS3 Rotate Demo --------------------------------------------------------------------------------------------------------------------------------------------------

防止在Chrome下旋转时出现闪动：
.button {
	-webkit-backface-visibility: hidden;
	/* 设置进行转换的元素的背面在面对用户时是否可见：隐藏 *
	 * http://dotnet.aspx.cc/CSS3/backface-visibility.htm */
}

或：

.button {
	-webkit-transform-style: preserve-3d;
	/* 设置内嵌的元素在 3D 空间如何呈现：保留 3D *
	 * http://dotnet.aspx.cc/CSS3/transform-style.htm */
}
filter:progid: DXImageTransform.Microsoft.BasicImage(rotation=2); /* for IE */
/* rotation=x */ x 可为 0、1、2、3；0代表0度，1代表90度，2代表180度，3代表270度；

2、CSS3 Filters Demo --------------------------------------------------------------------------------------------------------------------------------------------------

参考网站：http://www.script-tutorials.com/webcam-video-capture-in-html5-and-css3-filters/
/*
 * filters via:
 * http://www.script-tutorials.com/webcam-video-capture-in-html5-and-css3-filters/
 */
.grayscale{
	-webkit-filter:grayscale(1);
	-moz-filter:grayscale(1);
	-o-filter:grayscale(1);
	-ms-filter:grayscale(1);
	filter:grayscale(1);
}

.sepia{
	-webkit-filter:sepia(0.8);
	-moz-filter:sepia(0.8);
	-o-filter:sepia(0.8);
	-ms-filter:sepia(0.8);
	filter:sepia(0.8);
}

.blur{
	-webkit-filter:blur(3px);
	-moz-filter:blur(3px);
	-o-filter:blur(3px);
	-ms-filter:blur(3px);
	filter:blur(3px);
}

.brightness{
	-webkit-filter:brightness(0.3);
	-moz-filter:brightness(0.3);
	-o-filter:brightness(0.3);
	-ms-filter:brightness(0.3);
	filter:brightness(0.3);
}

.contrast{
	-webkit-filter:contrast(0.5);
	-moz-filter:contrast(0.5);
	-o-filter:contrast(0.5);
	-ms-filter:contrast(0.5);
	filter:contrast(0.5);
}

.hue-rotate{
	-webkit-filter:hue-rotate(90deg);
	-moz-filter:hue-rotate(90deg);
	-o-filter:hue-rotate(90deg);
	-ms-filter:hue-rotate(90deg);
	filter:hue-rotate(90deg);
}

.hue-rotate2{
	-webkit-filter:hue-rotate(180deg);
	-moz-filter:hue-rotate(180deg);
	-o-filter:hue-rotate(180deg);
	-ms-filter:hue-rotate(180deg);
	filter:hue-rotate(180deg);
}

.hue-rotate3{
	-webkit-filter:hue-rotate(270deg);
	-moz-filter:hue-rotate(270deg);
	-o-filter:hue-rotate(270deg);
	-ms-filter:hue-rotate(270deg);
	filter:hue-rotate(270deg);
}

.saturate{
	-webkit-filter:saturate(10);
	-moz-filter:saturate(10);
	-o-filter:saturate(10);
	-ms-filter:saturate(10);
	filter:saturate(10);
}

.invert{
	-webkit-filter:invert(1);
	-moz-filter:invert(1);
	-o-filter: invert(1);
	-ms-filter: invert(1);
	filter: invert(1);
}

3、适配横竖幅、横竖屏 --------------------------------------------------------------------------------------------------------------------------------------------------

HTML：

    <span class="portrait">Portrait Mode</span>
    <span class="landscape">Landscape Mode</span>

CSS：

    .portrait,
    .landscape{display:none;}

    @media all and (orientation:portrait) {
        .portrait{display:inline;}
    }
    @media all and (orientation:landscape) {
        .landscape{display:inline;}
    }

或外链不同的CSS文件，每个CSS文件控制对应文字的显示隐藏：

    <link rel="stylesheet" media="all and (orientation:portrait)" href="portrait.css">
    <link rel="stylesheet" media="all and (orientation:landscape)" href="landscape.css">


4、任意分栏式布局 Any Order, Any Layout Columns --------------------------------------------------------------------------------------------------------------------------------------------------
   见 layouts.html 文件
    二分栏：百分比宽度
    二分栏：一栏定宽，另一栏自适应
    三分栏：百分比宽度
    三分栏：左右栏定宽，中间栏自适应
    三块二分栏：
    二分栏结构，两层布局嵌套

5、未知高度，div垂直居中的一个跨浏览器方案 --------------------------------------------------------------------------------------------------------------------------------------------------

   见 layouts.html 文件

<p>未知高度，div垂直居中的一个跨浏览器方案</p>
<style type="text/css">
    .test-03 div {
        display: table-cell;
        zoom: 1;
        padding: 10px;
        vertical-align: middle;
    }

    .test-03 div:first-child {
        background: #69f;
        color: #fff;
    }

    .test-03 div.part-02 {
        background: #fc0;
    }
</style>
<div class="test-03">
    <div class="part-01">blah blah...看见我居中了吗?</div>
    <div class="part-02">
        <p>blah blah...</p>

        <p>blah blah...</p>

        <p>blah blah...</p>

        <p>blah blah...</p>

        <p>blah blah...</p>

        <p>blah blah...</p>

        <p>blah blah...</p>

        <p>blah blah...</p>

        <p>blah blah...</p>
    </div>
</div>



6、CSS 控制左右两列高度相等 --------------------------------------------------------------------------------------------------------------------------------------------------
   见 layouts.html 文件

<style type="text/css">
    #wrap #header {
        text-align: center;
        background-color: #c2c2c2;
    }

    #wrap #header h1{
        margin: 0;
    }

    #wrap {
        width: 750px;
        margin: 0 auto;
        overflow: hidden;
    }

    #wrap #sideleft {
        width: 580px;
        float: left;
        background-color: #aceaca;
    }

    #wrap #sideright {
        width: 170px;
        float: left;
        background-color: #2bdd89;

    }

    #wrap #footer {
        float: left;
        width: 100%;
        background-color: #999;
        text-align: center;
        color: #e9e7ff;
    }

    #sideleft:before, #sideright:before {
        content: '[DO NOT LEAVE IT IS NOT REAL]';
        display: block;
        background: inherit;
        padding-top: 32767px !important;
        margin-bottom: -32767px !important;
        height: 0;
    }
</style>
<div id="wrap">
    <div id="header">
        <h1>Head</h1>
    </div>
    <div id="sideleft">
        <h2>sideleft</h2>

        <p> 要从固定的、基于像素的设计方法转到弹性的、相对的设计方法并不容易。但是如果恰当利用，就可以成为增强亲和力和易用性的一个自然选择，同时又无须做出设计上的牺牲。 </p>

        <p> 像素是计算机屏幕上的不可缩放的点，而一个
            h3 就是一个字大小的方块。由于字体大小的变化， h3
            代表用户喜欢的文字大小的相对单位。 </p>

        <p> 采用印刷式的固定设计方案或许要容易些，因为如果尺寸不变，则考虑的东西就相对较少。可是如果采用弹性的设计方法，就可以充分利用电脑的显示器和浏览器。 </p>

        <p> 也许你想你的网站以某种特定的方式显示，但是你的用户想看到的可能不一样。任何强加于用户的东西都不利于易用性，从而对网站的成功造成损害。 </p>

        <p> 要从固定的、基于像素的设计方法转到弹性的、相对的设计方法并不容易。但是如果恰当利用，就可以成为增强亲和力和易用性的一个自然选择，同时又无须做出设计上的牺牲。 </p>

        <p> 像素是计算机屏幕上的不可缩放的点，而一个
            h3 就是一个字大小的方块。由于字体大小的变化， h3
            代表用户喜欢的文字大小的相对单位。 </p>

        <p> 采用印刷式的固定设计方案或许要容易些，因为如果尺寸不变，则考虑的东西就相对较少。可是如果采用弹性的设计方法，就可以充分利用电脑的显示器和浏览器。 </p>

        <p> 也许你想你的网站以某种特定的方式显示，但是你的用户想看到的可能不一样。任何强加于用户的东西都不利于易用性，从而对网站的成功造成损害。 </p>
    </div>
    <div id="sideright">
        <h2>sideright</h2>

        <p> 要从固定的、基于像素的设计方法转到弹性的、相对的设计方法并不容易。但是如果恰当利用，就可以成为增强亲和力和易用性的一个自然选择，同时又无须做出设计上的牺牲。 </p>

        <p> 像素是计算机屏幕上的不可缩放的点，而一个
            h3 就是一个字大小的方块。由于字体大小的变化， h3
            代表用户喜欢的文字大小的相对单位。 </p>

        <p> 采用印刷式的固定设计方案或许要容易些，因为如果尺寸不变，则考虑的东西就相对较少。可是如果采用弹性的设计方法，就可以充分利用电脑的显示器和浏览器。 </p>

        <p> 也许你想你的网站以某种特定的方式显示，但是你的用户想看到的可能不一样。任何强加于用户的东西都不利于易用性，从而对网站的成功造成损害。 </p>
    </div>
    <div id="footer">
        <address>
            Footer
        </address>
    </div>
</div>

7、未知高度图片在容器中垂直居中 --------------------------------------------------------------------------------------------------------------------------------------------------
使用纯CSS实现未知尺寸的图片(但高宽都小于200px)在200px的正方形容器中水平和垂直居中。
    css:
    <style>
        .box {
            display: table-cell;
                 width: 200px;
            height: 200px;
            text-align: center;
            border: 1px solid #ccc;
            background: #eee;
        }
    </style>

    html:
    <div class="box">
        <img src="matt_100.gif">
    </div>

8、用CSS做双线边框按钮  --------------------------------------------------------------------------------------------------------------------------------------------------



9、圣杯布局：三分栏：左右两栏宽度固定，中间栏宽度自适应   --------------------------------------------------------------------------------------------------------------------------------------------------
    见 固定自适应固定布局-圣杯布局.html


10、三分栏：左右两栏宽度自适应，中间栏宽度固定  --------------------------------------------------------------------------------------------------------------------------------------------------
    见 自适应固定自适应布局.html
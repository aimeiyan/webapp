1、 IE盒模型：实际占用的宽（高）度 = 内容宽（高）度[CSS值]
    标准盒模型：实际占用的宽（高）度 = 内容宽（高）度[CSS值] + 左（上）padding + 右（下）padding + 左（上）border + 右（下）border

2、box-sizing样式赋了一个border-box，意思就是使用类似IE的盒模型来计算宽高。除此之外，它还可以取content-box，就是W3C默认的标准盒模型了。
正是由于这个便利，可以发现很多CSS框架（如bootstrap）都会有这么一条样式* {box-sizing: border-box}，即将所有的元素都按IE的盒模型处理，因
为这样给我们的布局带来很多便利，避免不必要的像素计算。

3、使用 Modernizr 检测HTML5和CSS3浏览器支持功能
（1）传统浏览器目前不会被完全取代，令你难以将最新的 CSS3 或 HTML5 功能嵌入你的网站。 Modernizr 正是为解决这一难题应运而生，作为一个开源的
JavaScript 库，Modernizr 检测浏览器对 CSS3 或 HTML5 功能支持情况。 Modernizr 并非试图添加老版本浏览器不支持的功能，而是令你通过创建可
选风格配置修改页面设计。 它也可以通过加载定制的脚本来模拟老版本浏览器不支持的功能。

（2）Modernizr 是一个用来检测浏览器功能支持情况的 JavaScript 库。 目前，通过检验浏览器对一系列测试的处理情况，Modernizr 可以检测18项 CSS3
功能以及40多项关于HTML5 的功能。 它比传统检测浏览器名称（浏览器嗅探）的方式更为可靠。 一整套测试的执行时间仅需几微秒。 此外，Modernizr 网站通
过定制脚本只对你感兴趣的元素进行检测，从而实现效率优化。

   当使用 Modernizr 检测 CSS3 支持情况时，你无需具备任何 JavaScript 的知识。 你仅需在网页中插入文件，它随即根据浏览器的功能情况在页面的<html>
标签上添加一组类。 相应类的名称已经符合标准化的要求并浅显易懂。 例如，如果浏览器支持 box-shadow 属性，则需要添加相应的 boxshadow 类；否则，
添加一个 no-boxshadow类即可。 你所要做的一切只不过是创建一个使用这些类的式样表，以便为相应浏览器提供合适的式样。


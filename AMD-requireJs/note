1、AMD
   AMD - “Asynchronous Module Definition”，异步模块定义，异步方式加载模块，模块的加载不影响它后面语句的运行。
所有依赖这个模块的语句，都定义在一个回调函数中，等到加载完成之后，这个回调函数才会运行。

   AMD也采用require()语句加载模块，要求两个参数：
          require([module], callback);

   第一个参数[module]，是一个数组，里面的成员就是要加载的模块；第二个参数callback，则是加载成功之后的回调函数。
如果将前面的代码改写成AMD形式，就是下面这样：
          require(['math'], function (math) {
          　　　　math.add(2, 3);
          　　});

math.add()与math模块加载不是同步的，浏览器不会发生假死。所以很显然，AMD比较适合浏览器环境。

2、有两个Javascript库实现了AMD规范：require.js 和 curl.js。

3、require.js 解决两个问题：
   （1）实现 js 文件的异步加载，避免网页失去响应；
　 （2）管理模块之间的依赖性，便于代码的编写和维护。

4、例子解说：
  就这个意思： 你的网页 a.html   依赖于

  a.js, b.js

  而 a.js 又依赖 a1.js, a2.js
  而 b.js 又依赖 b1.js, b2.js

  这个时候，如果没有 require 的js， 你需要把 6个js都 include 到 a.html 里面。

  但是如果有require的js， 他来帮你管理依赖。 这样就省心一些。

  他的目的是： 管理依赖， 模块化。

5、http://www.cnblogs.com/snandy/archive/2012/05/22/2513652.html
   http://www.cnblogs.com/snandy/archive/2012/05/23/2513712.html

